# 对一个变量赋值一个字符串后，程序就会在内存中开辟一个内存来存储该字符串，即使对变量重新赋值，该字符串在内存中也不会改变，而是重新开辟新内存赋值给这个变量
a="hi,你好"

print(a,'内存地址：',id(a))

a='hello,您好'
print(a,'内存地址：',id(a))

#要如何修改已经存在与内存中的字符串呢，而不是重新开辟新内存？

#可以用bytearray函数

b=bytearray(a,'utf-8')
print(b,'内存地址：',id(b))

#此时b就获取了内存里的二进制字符串，修改后就会直接修改内存值,而不会开辟新的字符串内存，这种操作用于大内存字符串修改，防止过多内存消耗
print(b[0])
print(b[6])
b[0]=105
b[6]=231
print(b,'内存地址：',id(b))


